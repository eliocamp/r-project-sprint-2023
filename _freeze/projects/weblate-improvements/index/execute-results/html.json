{
  "hash": "6416dcabf293ee455e6e53fe8104c645",
  "result": {
    "markdown": "---\ntitle: Weblate Improvements # Warning: changing the title may create a new Discussions thread!\ndescription: \"Improve the web-based translation tool at translate.rx.studio\" # Optional short description for post on Discussions\nauthor: Gergely Daroczi # and co-authors if applicable\noutput: html_document\ncategories: [Translations, Documentation] # use labels from https://github.com/r-devel/r-project-sprint-2023/labels\ncomments:\n  giscus: \n    repo: \"r-devel/r-project-sprint-2023\"\n    repo-id: \"R_kgDOIhAibA\"\n    category: \"Proposals\"\n    category-id: \"DIC_kwDOIhAibM4CW3GY\"\n    mapping: \"title\"\n    reactions-enabled: true\n    loading: lazy\n---\n\n\n## Background\n\nThe R Project has a global and active community with members speaking different languages around the world, in many cases with the need to be able to use R in their native natural language instead of English.\n\nThis project aims to provide better coverage of translations by making it easier to contribute translations to R -- even without technical skills.\n\n## Problem statement\n\nThe R project has been supporting the translation of user messages, warnings, errors etc since R version 2.1.0 (April 2005) using\n\n-   the `gettext` functions to lookup translations, and\n-   the PO files defining the translations, stored in the SVN repository.\n\nAlthough the technology existed, but contributing translations was not straightforward due to\n\n-   the technical overhead of dealing with PO files made it difficult for external parties to contribute,\n-   the limited write-access to the repository requires a Core R member to sponsor and actually commit the changes.\n\nAround 2010, there was a web-based translation service hosted at <http://translation.r-project.org/pootle/>, which made the PO file strings available for translation using any web-browser after authentication. Unfortunately, the service was shut down later without a successor.\n\n## Proposed solution\n\nA modern alternative of Pootle is [Weblate](https://weblate.org/en/), which is a web-based tool to make it easy to crowd-source translating strings extracted from the source code, written in Python, extensible by using plugins, comes with pre-build Docker images, great docs and community.\n\nA POC installation has been deployed at <https://translate.rx.studio> in May 2022, and shared with the R community on the R Contributors Slack channel.\n\nEarly feedback was positive, and thousands of strings have been already translated in a dozen of languages, but there are ways to improve\n\n-   UX for translators and translation team (e.g. review workflows),\n-   reporting on the state of translations (e.g. GSoC dashboard),\n-   integration with R Core (e.g. quarterly patch files),\n-   maintenance (e.g. git conflicts and forced rebase),\n-   hosting (e.g. to decide if we keep the current domain or move under r-project.org, who is hosting etc).\n\nActual tasks are listed at the [Weblate ideation dashboard](https://github.com/orgs/r-devel/projects/2).\n\n## Project requirements\n\nAny help is highly appreciated, e.g. translations without any technical skills, but to achieve the goal of improving the current Weblate service, the below skills/experiences would be helpful:\n\n-   UNIX system administration (e.g. SSH, advanced git, Docker, AWS)\n-   Python (e.g. to write custom Weblate plugins)\n-   web services (e.g. to write an API endpoint in R that Weblate can call)\n-   project/product management (e.g. to define and document translation workflows)\n\n## Project resources\n\n-   [Translating R workshop (1h30m video)](https://contributor.r-project.org/tutorials/translating-r-to-your-language/)\n-   [LatinR hackathon intro to Weblate (30m video in Spanish)](https://contributor.r-project.org/demos/latinr-hackathon/)\n-   [Infrastructure and maintenance instructions](https://github.com/r-devel/translations/wiki/Weblate-server)\n\n## Project outcomes\n\n-   Recommendations and documentation for translation teams (e.g. workflows)\n-   Automated checks on translation suggestions\n-   More seamless integration with R Core (e.g. better docs and/or automatioin on generating patch files to be committed into SVN)\n\n## Reactions and comments\n\n\n```{=html}\n<!-- \nPlease leave the Reactions and comments section\n- a Giscus comment box will be automatically added here \n-->\n```\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}